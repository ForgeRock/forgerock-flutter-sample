{"version":3,"sources":["ActionsheetItem.tsx"],"names":["ActionsheetItem","props","ref","resolvedProps","undefined","cascadePseudoProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,MAAMA,eAAe,GAAG,CAACC,KAAD,EAA+BC,GAA/B,KAA6C;AACnE,QAAMC,aAAa,GAAG,+BACpB,iBADoB,EAEpBF,KAFoB,EAGpBG,SAHoB,EAIpB;AACEC,IAAAA,kBAAkB,EAAE;AADtB,GAJoB,CAAtB,CADmE,CASnE;;AACA,MAAI,kDAAsBJ,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBAAO,6BAAC,cAAD,eAAYE,aAAZ;AAA2B,IAAA,GAAG,EAAED;AAAhC,KAAP;AACD,CAfD;;4BAiBe,+BAAK,uBAAWF,eAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IActionsheetItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetItem = (props: IActionsheetItemProps, ref?: any) => {\n  const resolvedProps = usePropsResolution(\n    'ActionsheetItem',\n    props,\n    undefined,\n    {\n      cascadePseudoProps: true,\n    }\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <Button {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetItem));\n"]}