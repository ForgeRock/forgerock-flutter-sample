{"mappings":";;;;AAmBA;;;;OAIO,SAASA,eAAT,CAA2CC,KAA3C,EAAoF;AACzF,MAAIC,KAAK,GAAGC,wBAAwB,oCAC/BF,KAD+B;AAElCG,IAAAA,wBAAwB,EAAE;AAFQ,KAApC;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIC,WAAW,GAAGJ,KAAK,CAACI,WAAxB;;AACA,QAAIJ,KAAK,CAACK,gBAAN,CAAuBC,OAAvB,IAAkC,CAACN,KAAK,CAACO,UAAN,CAAiBC,OAAjB,CAAyBJ,WAAzB,CAAvC,EAA8E;AAC5EA,MAAAA,WAAW,GAAGJ,KAAK,CAACO,UAAN,CAAiBE,WAAjB,EAAd;AACAT,MAAAA,KAAK,CAACK,gBAAN,CAAuBK,gBAAvB,CAAwCN,WAAxC;AACD;;AAED,QAAIJ,KAAK,CAACK,gBAAN,CAAuBM,UAAvB,IAAqC,IAAzC,EAA+C;AAC7CX,MAAAA,KAAK,CAACK,gBAAN,CAAuBO,aAAvB,CAAqCR,WAArC;AACD;AACF,GAXQ,EAWN,CAACJ,KAAK,CAACK,gBAAP,EAAyBL,KAAK,CAACI,WAA/B,EAA4CJ,KAAK,CAACO,UAAlD,CAXM,CAAT;AAaA,SAAOP,KAAP;AACD","sources":["./packages/@react-stately/tabs/src/useTabListState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {SingleSelectListState, useSingleSelectListState} from '@react-stately/list';\nimport {TabListProps} from '@react-types/tabs';\nimport {useEffect} from 'react';\n\n\nexport interface TabListState<T> extends SingleSelectListState<T> {}\n\n/**\n * Provides state management for a Tabs component. Tabs include a TabList which tracks\n * which tab is currently selected and displays the content associated with that Tab in a TabPanel.\n */\nexport function useTabListState<T extends object>(props: TabListProps<T>): TabListState<T> {\n  let state = useSingleSelectListState<T>({\n    ...props,\n    suppressTextValueWarning: true\n  });\n\n  useEffect(() => {\n    // Ensure a tab is always selected (in case no selected key was specified or if selected item was deleted from collection)\n    let selectedKey = state.selectedKey;\n    if (state.selectionManager.isEmpty || !state.collection.getItem(selectedKey)) {\n      selectedKey = state.collection.getFirstKey();\n      state.selectionManager.replaceSelection(selectedKey);\n    }\n\n    if (state.selectionManager.focusedKey == null) {\n      state.selectionManager.setFocusedKey(selectedKey);\n    }\n  }, [state.selectionManager, state.selectedKey, state.collection]);\n\n  return state;\n}\n"],"names":["useTabListState","props","state","useSingleSelectListState","suppressTextValueWarning","useEffect","selectedKey","selectionManager","isEmpty","collection","getItem","getFirstKey","replaceSelection","focusedKey","setFocusedKey"],"version":3,"file":"module.js.map"}