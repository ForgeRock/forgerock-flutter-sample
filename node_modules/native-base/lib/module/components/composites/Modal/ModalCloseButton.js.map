{"version":3,"sources":["ModalCloseButton.tsx"],"names":["React","memo","forwardRef","ModalContext","usePropsResolution","Button","CloseIcon","useHasResponsiveProps","ModalCloseButton","props","ref","_icon","resolvedProps","handleClose","useContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAoC;AAC3D,QAAM;AAAEC,IAAAA,KAAF;AAAS,OAAGC;AAAZ,MAA8BR,kBAAkB,CACpD,kBADoD,EAEpDK,KAFoD,CAAtD;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAkBb,KAAK,CAACc,UAAN,CAAiBX,YAAjB,CAAxB,CAL2D,CAM3D;;AACA,MAAII,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC;AADV,KAEMG,aAFN;AAGE,IAAA,OAAO,EAAEC,WAHX;AAIE,IAAA,kBAAkB,EAAC,cAJrB;AAKE,IAAA,GAAG,EAAEH;AALP,mBAOE,oBAAC,SAAD,EAAeC,KAAf,CAPF,CADF;AAWD,CArBD;;AAuBA,4BAAeV,IAAI,eAACC,UAAU,CAACM,gBAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport Button from '../../primitives/Button/Button';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const { _icon, ...resolvedProps } = usePropsResolution(\n    'ModalCloseButton',\n    props\n  );\n  const { handleClose } = React.useContext(ModalContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Button\n      variant=\"ghost\"\n      {...resolvedProps}\n      onPress={handleClose}\n      accessibilityLabel=\"Close dialog\"\n      ref={ref}\n    >\n      <CloseIcon {..._icon} />\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n"]}