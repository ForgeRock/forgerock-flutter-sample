{"version":3,"sources":["ModalCloseButton.tsx"],"names":["ModalCloseButton","props","ref","_icon","resolvedProps","handleClose","React","useContext","ModalContext"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAoC;AAC3D,QAAM;AAAEC,IAAAA,KAAF;AAAS,OAAGC;AAAZ,MAA8B,+BAClC,kBADkC,EAElCH,KAFkC,CAApC;;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAkBC,eAAMC,UAAN,CAAiBC,qBAAjB,CAAxB,CAL2D,CAM3D;;;AACA,MAAI,kDAAsBP,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,eAAD;AACE,IAAA,OAAO,EAAC;AADV,KAEMG,aAFN;AAGE,IAAA,OAAO,EAAEC,WAHX;AAIE,IAAA,kBAAkB,EAAC,cAJrB;AAKE,IAAA,GAAG,EAAEH;AALP,mBAOE,6BAAC,gBAAD,EAAeC,KAAf,CAPF,CADF;AAWD,CArBD;;4BAuBe,+BAAK,uBAAWH,gBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport Button from '../../primitives/Button/Button';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const { _icon, ...resolvedProps } = usePropsResolution(\n    'ModalCloseButton',\n    props\n  );\n  const { handleClose } = React.useContext(ModalContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Button\n      variant=\"ghost\"\n      {...resolvedProps}\n      onPress={handleClose}\n      accessibilityLabel=\"Close dialog\"\n      ref={ref}\n    >\n      <CloseIcon {..._icon} />\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n"]}