{"version":3,"sources":["getSpacedChildren.tsx"],"names":["getSpacedChildren","children","space","axis","reverse","divider","childrenArray","React","Children","toArray","orientation","responsiveQueryContext","useContext","ResponsiveQueryContext","disableCSSMediaQueries","spacingProp","mx","my","cloneElement","map","child","index","key","length","width","height"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAaA,MAAMA,iBAAiB,GAAG,CACxBC,QADwB,EAExBC,KAFwB,EAGxBC,IAHwB,EAIxBC,OAJwB,EAKxBC,OALwB,KAMhB;AACR,MAAIC,aAAa,GAAGC,eAAMC,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,CAApB;;AACAK,EAAAA,aAAa,GACXF,OAAO,KAAK,SAAZ,GAAwB,CAAC,GAAGE,aAAJ,EAAmBF,OAAnB,EAAxB,GAAuDE,aADzD;AAGA,QAAMI,WAAW,GAAGP,IAAI,KAAK,GAAT,GAAe,UAAf,GAA4B,YAAhD,CALQ,CAOR;;AACA,QAAMQ,sBAAsB,GAAGJ,eAAMK,UAAN,CAAiBC,+CAAjB,CAA/B;;AACA,QAAMC,sBAAsB,GAAGH,sBAAsB,CAACG,sBAAtD,CATQ,CAWR;;AACA,MAAIT,OAAJ,EAAa;AACX,UAAMU,WAAmB,GAAG,EAC1B,IAAIZ,IAAI,KAAK,GAAT,GAAe;AAAEa,QAAAA,EAAE,EAAEd;AAAN,OAAf,GAA+B;AAAEe,QAAAA,EAAE,EAAEf;AAAN,OAAnC;AAD0B,KAA5B;AAIAG,IAAAA,OAAO,gBAAGE,eAAMW,YAAN,CAAmBb,OAAnB,EAA4B;AACpCK,MAAAA,WADoC;AAEpC,SAAGK;AAFiC,KAA5B,CAAV;AAKAT,IAAAA,aAAa,GAAGA,aAAa,CAACa,GAAd,CAAkB,CAACC,KAAD,EAAaC,KAAb,KAA+B;AAAA;;AAC/D,0BACE,6BAAC,cAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,gBAAED,KAAK,CAACE,GAAR,0EAA+BD,KAA/B;AAAnB,SACGD,KADH,EAEGC,KAAK,GAAGf,aAAa,CAACiB,MAAd,GAAuB,CAA/B,IAAoClB,OAFvC,CADF;AAMD,KAPe,CAAhB;AAQD,GAlBD,MAkBO;AACL,UAAMU,WAAmB,GAAG,EAC1B,IAAIZ,IAAI,KAAK,GAAT,GAAe;AAAEqB,QAAAA,KAAK,EAAEtB;AAAT,OAAf,GAAkC;AAAEuB,QAAAA,MAAM,EAAEvB;AAAV,OAAtC;AAD0B,KAA5B;AAGAI,IAAAA,aAAa,GAAGA,aAAa,CAACa,GAAd,CAAkB,CAACC,KAAD,EAAaC,KAAb,KAA+B;AAAA;;AAC/D,0BACE,6BAAC,cAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,iBAAED,KAAK,CAACE,GAAR,4EAA+BD,KAA/B;AAAnB,SACGD,KADH,EAEGN,sBAAsB,GACrBO,KAAK,GAAGf,aAAa,CAACiB,MAAd,GAAuB,CAA/B,iBAAoC,6BAAC,YAAD,EAASR,WAAT,CADf,gBAGrB,2DALJ,CADF;AAUD,KAXe,CAAhB;AAYD;;AAED,SAAOT,aAAP;AACD,CAvDD;;eAyDeN,iB","sourcesContent":["import React from 'react';\nimport { default as Box } from '../components/primitives/Box';\nimport type { SpaceType as ThemeSpaceType } from '../components/types';\nimport { ResponsiveQueryContext } from './useResponsiveQuery/ResponsiveQueryProvider';\n\ntype SpaceType =\n  | 'gutter'\n  | '2xs'\n  | 'xs'\n  | 'sm'\n  | 'md'\n  | 'lg'\n  | 'xl'\n  | '2xl'\n  | ThemeSpaceType;\n\nconst getSpacedChildren = (\n  children: JSX.Element[] | JSX.Element,\n  space: undefined | SpaceType,\n  axis: 'X' | 'Y',\n  reverse: string,\n  divider: JSX.Element | undefined\n): any => {\n  let childrenArray = React.Children.toArray(children);\n  childrenArray =\n    reverse === 'reverse' ? [...childrenArray].reverse() : childrenArray;\n\n  const orientation = axis === 'X' ? 'vertical' : 'horizontal';\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  // If there's a divider, we wrap it with a Box and apply vertical and horizontal margins else we add a spacer Box with height or width\n  if (divider) {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { mx: space } : { my: space }),\n    };\n\n    divider = React.cloneElement(divider, {\n      orientation,\n      ...spacingProp,\n    });\n\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {index < childrenArray.length - 1 && divider}\n        </React.Fragment>\n      );\n    });\n  } else {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { width: space } : { height: space }),\n    };\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {disableCSSMediaQueries ? (\n            index < childrenArray.length - 1 && <Box {...spacingProp} />\n          ) : (\n            <></>\n          )}\n        </React.Fragment>\n      );\n    });\n  }\n\n  return childrenArray;\n};\n\nexport default getSpacedChildren;\n"]}