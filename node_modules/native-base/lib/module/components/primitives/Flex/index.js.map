{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","Flex","props","ref","align","justify","wrap","basis","grow","shrink","direction","resolvedProps","flexDirection","alignItems","justifyContent","flexGrow","flexBasis","flexShrink","flexWrap","Spacer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAoBC,GAApB,KAAiC;AAC5C,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,SAPI;AAQJ,OAAGC;AARC,MASFZ,kBAAkB,CAAC,MAAD,EAASG,KAAT,CATtB,CAD4C,CAY5C;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,oBAAC,GAAD,eACMA,KADN,EAEMS,aAFN;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,aAAa,EAAED,SAAS,IAAIC,aAAa,CAACC,aAJ5C;AAKE,IAAA,UAAU,EAAER,KAAK,IAAIO,aAAa,CAACE,UALrC;AAME,IAAA,cAAc,EAAER,OAAO,IAAIM,aAAa,CAACG,cAN3C;AAOE,IAAA,QAAQ,EAAEN,IAAI,IAAIG,aAAa,CAACI,QAPlC;AAQE,IAAA,SAAS,EAAER,KAAK,IAAII,aAAa,CAACK,SARpC;AASE,IAAA,UAAU,EAAEP,MAAM,IAAIE,aAAa,CAACM,UATtC;AAUE,IAAA,QAAQ,EAAEX,IAAI,IAAIK,aAAa,CAACO,QAVlC;AAWE,IAAA,GAAG,EAAEf;AAXP,KADF;AAeD,CAhCD,C,CAkCA;;;AACA,OAAO,MAAMgB,MAAM,GAAIjB,KAAD,IAAgB;AACpC,sBAAO,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE;AAAf,KAAsBA,KAAtB,EAAP;AACD,CAFM;AAKP,4BAAeN,IAAI,eAACC,UAAU,CAACI,IAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IFlexProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Flex = (props: IFlexProps, ref: any) => {\n  const {\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    direction,\n    ...resolvedProps\n  } = usePropsResolution('Flex', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...props}\n      {...resolvedProps}\n      display=\"flex\"\n      flexDirection={direction || resolvedProps.flexDirection}\n      alignItems={align || resolvedProps.alignItems}\n      justifyContent={justify || resolvedProps.justifyContent}\n      flexGrow={grow || resolvedProps.flexGrow}\n      flexBasis={basis || resolvedProps.flexBasis}\n      flexShrink={shrink || resolvedProps.flexShrink}\n      flexWrap={wrap || resolvedProps.flexWrap}\n      ref={ref}\n    />\n  );\n};\n\n//Spacer Component that adds space between components where it is placed\nexport const Spacer = (props: any) => {\n  return <Box flexGrow={1} {...props} />;\n};\n\nexport type { IFlexProps };\nexport default memo(forwardRef(Flex));\n"]}