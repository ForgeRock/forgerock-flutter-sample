{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","children","_scrollview","props","ref","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAG,CAChB;AACEC,EAAAA,QADF;AAEEC,EAAAA,WAFF;AAGE,KAAGC;AAHL,CADgB,EAMhBC,GANgB,KAOb;AACH,QAAMC,aAAa,GAAG,+BAAmB,WAAnB,EAAgCF,KAAhC,CAAtB,CADG,CAEH;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,sBAAD,EAAgBD,WAAhB,eACE,6BAAC,YAAD,eAASG,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,MACGH,QADH,CADF,CADF;AAOD,CApBD;;4BAsBe,+BAAK,uBAAWD,SAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  {\n    children,\n    _scrollview,\n    ...props\n  }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const resolvedProps = usePropsResolution('ModalBody', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]}