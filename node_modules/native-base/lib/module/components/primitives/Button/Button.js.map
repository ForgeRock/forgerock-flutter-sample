{"version":3,"sources":["Button.tsx"],"names":["React","memo","forwardRef","Spinner","usePropsResolution","default","Box","HStack","Pressable","composeEventHandlers","useHover","useFocus","useIsPressed","useFocusRing","useHasResponsiveProps","Button","children","startIcon","rightIcon","leftIcon","endIcon","spinner","isDisabled","isLoading","spinnerPlacement","props","ref","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","isFocusVisible","focusRingProps","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","_text","_stack","_spinner","isLoadingText","resolvedProps","isValidElement","Children","map","child","index","cloneElement","key","boxChildren","spinnerElement","color","accessibilityRole"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,QAA1C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,YAHF,QAIO,sCAJP;AAKA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,MAAM,GAAG,CACb;AACE;AACAC,EAAAA,QAFF;AAGEC,EAAAA,SAHF;AAIEC,EAAAA,SAJF;AAKEC,EAAAA,QALF;AAMEC,EAAAA,OANF;AAOEC,EAAAA,OAPF;AAQEC,EAAAA,UARF;AASEC,EAAAA,SATF;AAUEC,EAAAA,gBAAgB,GAAG,OAVrB;AAWE,KAAGC;AAXL,CADa,EAcbC,GAda,KAeV;AAAA;;AACH,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BlB,QAAQ,EAA1C;AACA,QAAM;AAAEmB,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAgClB,YAAY,EAAlD;AACA,QAAM;AAAEmB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BrB,QAAQ,EAA1C;AACA,QAAM;AAAEsB,IAAAA,cAAF;AAAkBF,IAAAA,UAAU,EAAEG;AAA9B,MAAsDrB,YAAY,EAAxE;AAEA,QAAM;AACJsB,IAAAA,SADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,KAPI;AAQJC,IAAAA,MARI;AASJC,IAAAA,QATI;AAUJC,IAAAA,aAVI;AAWJ,OAAGC;AAXC,MAYFzC,kBAAkB,CAAC,QAAD,EAAWqB,KAAX,EAAkB;AACtCH,IAAAA,UADsC;AAEtCM,IAAAA,SAFsC;AAGtCI,IAAAA,SAHsC;AAItCF,IAAAA,SAJsC;AAKtCP,IAAAA,SALsC;AAMtCU,IAAAA;AANsC,GAAlB,CAZtB,CANG,CA2BH;;AACA,MAAInB,qBAAqB,CAACW,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,MAAIN,QAAJ,EAAc;AACZF,IAAAA,SAAS,GAAGE,QAAZ;AACD;;AACD,MAAID,SAAJ,EAAe;AACbE,IAAAA,OAAO,GAAGF,SAAV;AACD;;AACD,MAAIE,OAAO,iBAAIpB,KAAK,CAAC8C,cAAN,CAAqB1B,OAArB,CAAf,EAA8C;AAC5CA,IAAAA,OAAO,GAAGpB,KAAK,CAAC+C,QAAN,CAAeC,GAAf,CACR5B,OADQ,EAER,CAAC6B,KAAD,EAAqBC,KAArB,KAAuC;AACrC,0BAAOlD,KAAK,CAACmD,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BG,QAAAA,GAAG,4BAAqBF,KAArB,CAD4B;AAE/B,WAAGT,KAF4B;AAG/B,WAAGQ,KAAK,CAACxB;AAHsB,OAA1B,CAAP;AAKD,KARO,CAAV;AAUD;;AACD,MAAIR,SAAS,iBAAIjB,KAAK,CAAC8C,cAAN,CAAqB7B,SAArB,CAAjB,EAAkD;AAChDA,IAAAA,SAAS,GAAGjB,KAAK,CAAC+C,QAAN,CAAeC,GAAf,CACV/B,SADU,EAEV,CAACgC,KAAD,EAAqBC,KAArB,KAAuC;AACrC,0BAAOlD,KAAK,CAACmD,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BG,QAAAA,GAAG,8BAAuBF,KAAvB,CAD4B;AAE/B,WAAGT,KAF4B;AAG/B,WAAGQ,KAAK,CAACxB;AAHsB,OAA1B,CAAP;AAKD,KARS,CAAZ;AAUD;;AAED,QAAM4B,WAAW,GAAG9B,SAAS,IAAIqB,aAAb,GAA6BA,aAA7B,GAA6C5B,QAAjE;AAEA,QAAMsC,cAAc,GAAGjC,OAAO,GAC5BA,OAD4B,gBAG5B,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEoB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEc;AAAvB,KAAkCZ,QAAlC,EAHF;AAMA,sBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAErB,UAAU,IAAIC,SAD1B;AAEE,IAAA,GAAG,EAAEG,GAFP;AAGE,IAAA,SAAS,EAAEjB,oBAAoB,CAAC0B,SAAD,EAAYN,cAAc,CAACM,SAA3B,CAHjC;AAIE,IAAA,UAAU,EAAE1B,oBAAoB,CAAC2B,UAAD,EAAaP,cAAc,CAACO,UAA5B,CAJlC,CAKE;AALF;AAME,IAAA,SAAS,EAAE3B,oBAAoB,CAAC4B,SAAD,EAAYV,UAAU,CAACU,SAAvB,CANjC,CAOE;AAPF;AAQE,IAAA,UAAU,EAAE5B,oBAAoB,CAAC6B,UAAD,EAAaX,UAAU,CAACW,UAAxB,CARlC,CASE;AATF;AAUE,IAAA,OAAO,EAAE7B,oBAAoB,CAC3BA,oBAAoB,CAAC8B,OAAD,EAAUR,UAAU,CAACQ,OAArB,CADO,EAE3BL,cAAc,CAACK,OAFY,CAV/B,CAcE;AAdF;AAeE,IAAA,MAAM,EAAE9B,oBAAoB,CAC1BA,oBAAoB,CAAC+B,MAAD,EAAST,UAAU,CAACS,MAApB,CADM,EAE1BN,cAAc,CAACM,MAFW;AAf9B,KAmBMK,aAnBN;AAoBE,IAAA,iBAAiB,2BAAEpB,KAAK,CAAC+B,iBAAR,yEAA6B;AApBhD,mBAsBE,oBAAC,MAAD,EAAYd,MAAZ,EACGzB,SAAS,IAAI,CAACM,SAAd,GAA0BN,SAA1B,GAAsC,IADzC,EAEGM,SAAS,IAAIC,gBAAgB,KAAK,OAAlC,GAA4C8B,cAA5C,GAA6D,IAFhE,EAGGD,WAAW,gBACV,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEZ;AAAZ,KACGlB,SAAS,IAAIqB,aAAb,GAA6BA,aAA7B,GAA6C5B,QADhD,CADU,GAIR,IAPN,EAQGI,OAAO,IAAI,CAACG,SAAZ,GAAwBH,OAAxB,GAAkC,IARrC,EASGG,SAAS,IAAIC,gBAAgB,KAAK,KAAlC,GAA0C8B,cAA1C,GAA2D,IAT9D,CAtBF,CADF;AAoCD,CA1HD;;AA4HA,4BAAerD,IAAI,eAACC,UAAU,CAACa,MAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    spinnerPlacement = 'start',\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    ...resolvedProps\n  } = usePropsResolution('Button', props, {\n    isDisabled,\n    isHovered,\n    isFocused,\n    isPressed,\n    isLoading,\n    isFocusVisible,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  const boxChildren = isLoading && isLoadingText ? isLoadingText : children;\n\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n    >\n      <HStack {..._stack}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {boxChildren ? (\n          <Box _text={_text}>\n            {isLoading && isLoadingText ? isLoadingText : children}\n          </Box>\n        ) : null}\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n"]}