{"version":3,"sources":["Slider.tsx"],"names":["React","forwardRef","useSliderState","useLayout","usePropsResolution","Box","SliderContext","useSlider","useHasResponsiveProps","Slider","isDisabled","isReadOnly","props","ref","newProps","accessibilityLabel","value","defaultValue","onLayout","layout","trackLayout","updatedProps","Object","assign","state","numberFormatter","format","e","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","trackProps","wrapperStyle","height","orientation","undefined","width","contextValue","useMemo","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","Children","map","children","child","index","displayName","cloneElement"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0B,KAAGC;AAA7B,CAAhB,EAAoEC,GAApE,EAA+E;AAAA;;AAC7E,QAAMC,QAAQ,GAAG,EACf,GAAGF,KADY;AAEf,2CAAcA,KAAK,CAACG,kBAApB,yEAA0C;AAF3B,GAAjB;;AAKA,MAAI,OAAOH,KAAK,CAACI,KAAb,KAAuB,QAA3B,EAAqC;AACnC;AACAF,IAAAA,QAAQ,CAACE,KAAT,GAAiB,CAACJ,KAAK,CAACI,KAAP,CAAjB;AACD;;AAED,MAAI,OAAOJ,KAAK,CAACK,YAAb,KAA8B,QAAlC,EAA4C;AAC1C;AACAH,IAAAA,QAAQ,CAACG,YAAT,GAAwB,CAACL,KAAK,CAACK,YAAP,CAAxB;AACD;;AAEDL,EAAAA,KAAK,GAAGE,QAAR;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,MAAM,EAAEC;AAApB,MAAoCjB,SAAS,EAAnD;AACA,QAAMkB,YAA0B,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,CAAnC;;AAEA,MAAID,UAAU,IAAID,UAAlB,EAA8B;AAC5BW,IAAAA,YAAY,CAACX,UAAb,GAA0B,IAA1B;AACD;;AAED,QAAMc,KAAK,GAAGtB,cAAc,CAAC,EAC3B,GAAGmB,YADwB;AAE3B;AACAI,IAAAA,eAAe,EAAE;AAAEC,MAAAA,MAAM,EAAGC,CAAD,IAAOA;AAAjB,KAHU;AAI3BC,IAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QAJW;AAK3BC,IAAAA,QAAQ,EAAEjB,KAAK,CAACiB,QALW;AAM3BC,IAAAA,QAAQ,EAAGC,GAAD,IAAc;AACtBnB,MAAAA,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACkB,QAAN,CAAeC,GAAG,CAAC,CAAD,CAAlB,CAAlB;AACD,KAR0B;AAS3BC,IAAAA,WAAW,EAAGD,GAAD,IAAc;AACzBnB,MAAAA,KAAK,CAACoB,WAAN,IAAqBpB,KAAK,CAACoB,WAAN,CAAkBD,GAAG,CAAC,CAAD,CAArB,CAArB;AACD;AAX0B,GAAD,CAA5B;AAcA,QAAME,aAAa,GAAG7B,kBAAkB,CAAC,QAAD,EAAWQ,KAAX,EAAkB;AACxDF,IAAAA,UADwD;AAExDC,IAAAA;AAFwD,GAAlB,CAAxC;AAKA,QAAM;AAAEuB,IAAAA;AAAF,MAAiB3B,SAAS,CAC7BK,KAD6B,EAE9BY,KAF8B,EAG9BJ,WAH8B,CAAhC;AAMA,QAAMe,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAExB,KAAK,CAACyB,WAAN,KAAsB,UAAtB,GAAmC,MAAnC,GAA4CC,SADjC;AAEnBC,IAAAA,KAAK,EAAE3B,KAAK,CAACyB,WAAN,KAAsB,UAAtB,GAAmC,MAAnC,GAA4CC;AAFhC,GAArB;AAIA,QAAME,YAAY,GAAGxC,KAAK,CAACyC,OAAN,CAAc,MAAM;AACvC,WAAO;AACLrB,MAAAA,WADK;AAELI,MAAAA,KAFK;AAGLa,MAAAA,WAAW,EAAEzB,KAAK,CAACyB,WAHd;AAIL3B,MAAAA,UAAU,EAAEA,UAJP;AAKLgC,MAAAA,UAAU,EAAE9B,KAAK,CAAC8B,UALb;AAMLC,MAAAA,WAAW,EAAE/B,KAAK,CAAC+B,WANd;AAOLT,MAAAA,UAPK;AAQLvB,MAAAA,UAAU,EAAEA,UARP;AASLiC,MAAAA,aAAa,EAAE1B,QATV;AAUL2B,MAAAA,SAAS,EAAEZ,aAAa,CAACY,SAVpB;AAWLC,MAAAA,UAAU,EAAEb,aAAa,CAACa;AAXrB,KAAP,CADuC,CAcvC;AACD,GAfoB,EAelB,CACD1B,WADC,EAEDI,KAFC,EAGDZ,KAAK,CAACyB,WAHL,EAID3B,UAJC,EAKDE,KAAK,CAAC8B,UALL,EAMD9B,KAAK,CAAC+B,WANL,EAODhC,UAPC,EAQDO,QARC,EASDe,aAAa,CAACY,SATb,EAUDZ,aAAa,CAACa,UAVb,CAfkB,CAArB,CAtD6E,CAkF7E;;AACA,MAAItC,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE4B;AAA/B,kBACE,oBAAC,GAAD,eACML,YADN;AAEE,IAAA,cAAc,EAAC,QAFjB;AAGE,IAAA,GAAG,EAAEtB,GAHP;AAIE,IAAA,UAAU,EAAC;AAJb,KAKMoB,aALN,GAOGjC,KAAK,CAAC+C,QAAN,CAAeC,GAAf,CAAmBpC,KAAK,CAACqC,QAAzB,EAAmC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpD,QAAID,KAAK,CAACE,WAAN,KAAsB,aAA1B,EAAyC;AACvC,0BAAOpD,KAAK,CAACqD,YAAN,CAAmBH,KAAnB,EAAgD;AACrDC,QAAAA;AADqD,OAAhD,CAAP;AAGD;;AAED,WAAOD,KAAP;AACD,GARA,CAPH,CADF,CADF;AAqBD;;AAED,4BAAejD,UAAU,CAACQ,MAAD,CAAzB","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined,\n  };\n  const contextValue = React.useMemo(() => {\n    return {\n      trackLayout,\n      state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderSize,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    trackLayout,\n    state,\n    props.orientation,\n    isDisabled,\n    props.isReversed,\n    props.colorScheme,\n    isReadOnly,\n    onLayout,\n    resolvedProps.thumbSize,\n    resolvedProps.sliderSize,\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <Box\n        {...wrapperStyle}\n        justifyContent=\"center\"\n        ref={ref}\n        alignItems=\"center\"\n        {...resolvedProps}\n      >\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]}