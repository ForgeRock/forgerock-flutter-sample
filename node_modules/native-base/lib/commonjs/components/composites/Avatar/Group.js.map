{"version":3,"sources":["Group.tsx"],"names":["getAvatarGroupChildren","children","space","max","plusAvatarBg","props","childrenArray","React","Children","toArray","plusAvatars","length","slice","trailingChildren","defaultProps","ml","map","reverse","child","index","cloneElement","key","AvatarGroup","allProps","ref","borderColor","borderWidth","bg"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA;AAEA,MAAMA,sBAAsB,GAAG,CAC7BC,QAD6B,EAE7BC,KAF6B,EAG7BC,GAH6B,EAI7BC,YAJ6B,EAK7BC,KAL6B,KAM1B;AACH,MAAIC,aAAkB,GAAGC,eAAMC,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,CAAzB;;AACA,MAAIS,WAAmB,GAAG,CAA1B;;AACA,MAAI,CAAC,qBAAMP,GAAN,CAAD,IAAeA,GAAG,GAAGG,aAAa,CAACK,MAAnC,IAA6CR,GAAG,GAAG,CAAvD,EAA0D;AACxDO,IAAAA,WAAW,GAAGJ,aAAa,CAACK,MAAd,GAAuBR,GAArC;AACAG,IAAAA,aAAa,GAAGA,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAuBT,GAAvB,CAAhB;AACD;;AACD,QAAMU,gBAAgB,GAAGP,aAAa,CAACM,KAAd,CAAoB,CAApB,CAAzB;AACA,QAAME,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAEb;AADe,GAArB;AAGA,SAAO,CACLQ,WAAW,GAAG,CAAd,gBACE,6BAAC,eAAD;AAAQ,IAAA,EAAE,EAAEN;AAAZ,KAA8BU,YAA9B,EAAgDT,KAAhD,GACG,OAAOK,WADV,CADF,GAII,IALC,EAMLH,eAAMC,QAAN,CAAeQ,GAAf,CACEH,gBAAgB,CAACI,OAAjB,EADF,EAEE,CAACC,KAAD,EAAaC,KAAb,KAA+B;AAC7B,wBAAOZ,eAAMa,YAAN,CACLF,KADK,EAEL;AACEG,MAAAA,GAAG,+BAAwBF,KAAxB,CADL;AAEE,SAAGd,KAFL;AAGE,SAAGS,YAHL;AAIE,SAAGI,KAAK,CAACb;AAJX,KAFK,EAQLa,KAAK,CAACb,KAAN,CAAYJ,QARP,CAAP;AAUD,GAbH,CANK,eAqBLM,eAAMa,YAAN,CACEd,aAAa,CAAC,CAAD,CADf,EAEE,EACE,GAAGD,KADL;AAEE,OAAGC,aAAa,CAAC,CAAD,CAAb,CAAiBD;AAFtB,GAFF,EAMEC,aAAa,CAAC,CAAD,CAAb,CAAiBD,KAAjB,CAAuBJ,QANzB,CArBK,CAAP;AA8BD,CA/CD;;AAiDA,MAAMqB,WAAW,GAAG,CAACC,QAAD,EAA8BC,GAA9B,KAA2C;AAC7D,QAAM;AAAEvB,IAAAA,QAAF;AAAY,OAAGI;AAAf,MAAyBkB,QAA/B;AACA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA,EAA5B;AAAgCzB,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,MAA+C,uCACnD,aADmD,EAEnDE,KAFmD,CAArD,CAF6D,CAM7D;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,aAAD;AAAM,IAAA,aAAa,EAAC,aAApB;AAAkC,IAAA,GAAG,EAAEmB;AAAvC,KACGxB,sBAAsB,CAACC,QAAD,EAAWC,KAAX,EAAkBC,GAAlB,EAAuBwB,EAAvB,EAA2B;AAChDF,IAAAA,WADgD;AAEhDC,IAAAA,WAFgD;AAGhD,OAAGrB;AAH6C,GAA3B,CADzB,CADF;AASD,CAnBD;;4BAqBe,+BAAK,uBAAWiB,WAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Flex from '../../primitives/Flex';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\n// Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  space?: number,\n  max?: number,\n  plusAvatarBg?: string,\n  props?: any\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  const trailingChildren = childrenArray.slice(1);\n  const defaultProps = {\n    ml: space,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar bg={plusAvatarBg} {...defaultProps} {...props}>\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(\n      trailingChildren.reverse(),\n      (child: any, index: number) => {\n        return React.cloneElement(\n          child,\n          {\n            key: `avatar-group-child-${index}`,\n            ...props,\n            ...defaultProps,\n            ...child.props,\n          },\n          child.props.children\n        );\n      }\n    ),\n    React.cloneElement(\n      childrenArray[0],\n      {\n        ...props,\n        ...childrenArray[0].props,\n      },\n      childrenArray[0].props.children\n    ),\n  ];\n};\n\nconst AvatarGroup = (allProps: IAvatarGroupProps, ref: any) => {\n  const { children, ...props } = allProps;\n  const { borderColor, borderWidth, bg, space, max } = usePropsResolution(\n    'AvatarGroup',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Flex flexDirection=\"row-reverse\" ref={ref}>\n      {getAvatarGroupChildren(children, space, max, bg, {\n        borderColor,\n        borderWidth,\n        ...props,\n      })}\n    </Flex>\n  );\n};\n\nexport default memo(forwardRef(AvatarGroup));\n"]}