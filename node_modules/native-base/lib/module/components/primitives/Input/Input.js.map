{"version":3,"sources":["Input.tsx"],"names":["React","memo","forwardRef","Box","InputBase","useFormControl","useHasResponsiveProps","useHover","extractInObject","stylingProps","usePropsResolution","mergeRefs","Input","props","ref","inputProps","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","isFocused","setIsFocused","useState","handleFocus","focusState","callback","_ref","useRef","isHovered","inputThemeProps","disabled","accessibilityInvalid","accessibilityReadOnly","required","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","wrapperRef","resolvedProps","layoutProps","nonLayoutProps","margin","border","layout","flexbox","position","background","baseInputProps","e"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IInputProps } from './types';\nimport InputBase from './InputBase';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\n\nconst Input = (props: IInputProps, ref: any) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered,\n      isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const [, baseInputProps] = extractInObject(nonLayoutProps, ['variant']);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (InputLeftElement || InputRightElement || leftElement || rightElement) {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        overflow=\"hidden\"\n        {...layoutProps}\n        ref={mergeRefs([_ref, wrapperRef])}\n      >\n        {InputLeftElement || leftElement\n          ? InputLeftElement || leftElement\n          : null}\n        <InputBase\n          inputProps={inputProps}\n          bg=\"transparent\"\n          {...baseInputProps}\n          flex={1}\n          disableFocusHandling\n          ref={ref}\n          variant=\"unstyled\"\n          onFocus={(e) => {\n            handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n          }}\n          onBlur={(e) => {\n            handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n          }}\n        />\n        {InputRightElement || rightElement\n          ? InputRightElement || rightElement\n          : null}\n      </Box>\n    );\n  } else {\n    return (\n      <InputBase\n        inputProps={inputProps}\n        {...layoutProps}\n        {...baseInputProps}\n        ref={ref}\n        onFocus={(e) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n      />\n    );\n  }\n};\n\nexport default memo(forwardRef(Input));\n"]}