{"version":3,"sources":["component.tsx"],"names":["React","usePropsWithComponentTheme","makeStyledComponent","Factory","Component","componentTheme","forwardRef","children","props","ref","StyledComponent","calculatedProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,0BAAT,QAA2C,mDAA3C;AAGA,SAASC,mBAAT,QAAoC,iBAApC;AAEA,eAAe,SAASC,OAAT,CACbC,SADa,EAEbC,cAFa,EAGb;AACA,sBAAOL,KAAK,CAACM,UAAN,CACL,CAAC;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAAD,EAAoDC,GAApD,KAAiE;AAC/D,UAAMC,eAAe,GAAGR,mBAAmB,CAACE,SAAD,CAA3C;AACA,UAAMO,eAAe,GAAGV,0BAA0B,CAChDI,cADgD,aAChDA,cADgD,cAChDA,cADgD,GAC9B,EAD8B,EAEhDG,KAFgD,CAAlD;AAIA,wBACE,oBAAC,eAAD,eAAsBG,eAAtB;AAA6C,MAAA,GAAG,EAAEF;AAAlD,QACGF,QADH,CADF;AAKD,GAZI,CAAP;AAcD","sourcesContent":["import React from 'react';\nimport { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';\nimport type { ComponentTheme } from '../theme';\nimport type { FactoryComponentProps } from './types';\nimport { makeStyledComponent } from '../utils/styled';\n\nexport default function Factory<P>(\n  Component: React.ComponentType<P>,\n  componentTheme?: ComponentTheme\n) {\n  return React.forwardRef(\n    ({ children, ...props }: P & FactoryComponentProps, ref: any) => {\n      const StyledComponent = makeStyledComponent(Component);\n      const calculatedProps = usePropsWithComponentTheme(\n        componentTheme ?? {},\n        props\n      );\n      return (\n        <StyledComponent {...(calculatedProps as P)} ref={ref}>\n          {children}\n        </StyledComponent>\n      );\n    }\n  );\n}\n"]}