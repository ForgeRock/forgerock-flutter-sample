{"version":3,"sources":["menu.ts"],"names":["baseStyle","props","bg","py","borderWidth","borderColor","borderRadius","transition","initial","opacity","translateY","animate","duration","exit","style","StyleSheet","absoluteFill","MenuGroup","_title","fontSize","fontWeight","textTransform","color","p","MenuItem","px","outlineWidth","Platform","OS","undefined","_disabled","_text","_focus","_pressed","_icon","size","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA+C;AAC7C,SAAO;AACLC,IAAAA,EAAE,EAAE,qCAAyBD,KAAzB,CADC;AAELE,IAAAA,EAAE,EAAE,CAFC;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,WAAW,EAAE,6CAAiCJ,KAAjC,CAJR;AAKLK,IAAAA,YAAY,EAAE,IALT;AAMLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE,CAAC;AAA3B,OADC;AAEVC,MAAAA,OAAO,EAAE;AACPF,QAAAA,OAAO,EAAE,CADF;AAEPC,QAAAA,UAAU,EAAE,CAFL;AAGPH,QAAAA,UAAU,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAHL,OAFC;AAOVC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE,CAAC,EAA3B;AAA+BH,QAAAA,UAAU,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAA3C,OAPI;AAQVE,MAAAA,KAAK,EAAEC,wBAAWC;AARR;AANP,GAAP;AAiBD;;eAEc;AACbhB,EAAAA;AADa,C;;AAIR,MAAMiB,SAAS,GAAG;AACvBjB,EAAAA,SAAS,EAAGC,KAAD,KAAiB;AAC1BiB,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,UAAU,EAAE,GAFN;AAGNC,MAAAA,aAAa,EAAE,WAHT;AAINC,MAAAA,KAAK,EAAE,yCAA6BrB,KAA7B;AAJD,KADkB;AAO1BsB,IAAAA,CAAC,EAAE;AAPuB,GAAjB;AADY,CAAlB;;AAWA,MAAMC,QAAQ,GAAG;AACtBxB,EAAAA,SAAS,EAAGC,KAAD,KAAiB;AAC1BwB,IAAAA,EAAE,EAAE,CADsB;AAE1BtB,IAAAA,EAAE,EAAE,CAFsB;AAG1BuB,IAAAA,YAAY,EAAEC,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4BC,SAHhB;AAI1BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLT,QAAAA,KAAK,EAAE,iBAAK,UAAL,EAAiB,UAAjB,EAA6BrB,KAA7B;AADF;AADE,KAJe;AAS1B+B,IAAAA,MAAM,EAAE;AACN9B,MAAAA,EAAE,EAAE,6CAAiCD,KAAjC;AADE,KATkB;AAY1BgC,IAAAA,QAAQ,EAAE;AACR/B,MAAAA,EAAE,EAAE,6CAAiCD,KAAjC;AADI,KAZgB;AAe1BiC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELb,MAAAA,KAAK,EAAE,iBAAK,UAAL,EAAiB,UAAjB,EAA6BrB,KAA7B;AAFF;AAfmB,GAAjB,CADW;AAqBtBmC,EAAAA,YAAY,EAAE;AArBQ,CAAjB","sourcesContent":["import { Platform, StyleSheet } from 'react-native';\nimport { mode } from './../tools';\n\nfunction baseStyle(props: Record<string, any>) {\n  return {\n    bg: mode(`#fff`, `gray.700`)(props),\n    py: 2,\n    borderWidth: 1,\n    borderColor: mode(`coolGray.200`, `gray.600`)(props),\n    borderRadius: 'sm',\n    transition: {\n      initial: { opacity: 0, translateY: -10 },\n      animate: {\n        opacity: 1,\n        translateY: 0,\n        transition: { duration: 200 },\n      },\n      exit: { opacity: 0, translateY: -10, transition: { duration: 150 } },\n      style: StyleSheet.absoluteFill,\n    },\n  };\n}\n\nexport default {\n  baseStyle,\n};\n\nexport const MenuGroup = {\n  baseStyle: (props: any) => ({\n    _title: {\n      fontSize: 'xs',\n      fontWeight: 600,\n      textTransform: 'uppercase',\n      color: mode(`gray.500`, `gray.300`)(props),\n    },\n    p: 3,\n  }),\n};\nexport const MenuItem = {\n  baseStyle: (props: any) => ({\n    px: 3,\n    py: 2,\n    outlineWidth: Platform.OS === 'web' ? 0 : undefined,\n    _disabled: {\n      _text: {\n        color: mode('gray.400', 'gray.400')(props),\n      },\n    },\n    _focus: {\n      bg: mode(`coolGray.200`, `gray.600`)(props),\n    },\n    _pressed: {\n      bg: mode(`coolGray.300`, `gray.500`)(props),\n    },\n    _icon: {\n      size: 4,\n      color: mode('gray.500', 'gray.100')(props),\n    },\n  }),\n  defaultProps: {},\n};\n"]}