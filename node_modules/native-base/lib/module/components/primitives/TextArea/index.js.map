{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","Input","usePropsResolution","useHasResponsiveProps","TextArea","wrapperRef","props","ref","totalLines","newProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAmC,UAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAQA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CAAD,EAA2CC,GAA3C,KAAwD;AACvE,QAAM;AAAEC,IAAAA,UAAF;AAAc,OAAGC;AAAjB,MAA8BP,kBAAkB,CAAC,UAAD,EAAaI,KAAb,CAAtD,CADuE,CAEvE;;AACA,MAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,KAAD,eACMG,QADN;AAEE,IAAA,aAAa,EAAED,UAFjB;AAGE,IAAA,UAAU,EAAEH,UAHd;AAIE,IAAA,GAAG,EAAEE;AAJP,KADF;AAQD,CAdD;;AAgBA,4BAAeR,IAAI,eAACC,UAAU,CAACI,QAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Input, IInputProps } from '../Input';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface ITextAreaProps extends IInputProps {\n  /**\n   * Maps to react-native TextInput's numberOfLines.\n   */\n  totalLines?: number;\n}\n\nconst TextArea = ({ wrapperRef, ...props }: ITextAreaProps, ref: any) => {\n  const { totalLines, ...newProps } = usePropsResolution('TextArea', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Input\n      {...newProps}\n      numberOfLines={totalLines}\n      wrapperRef={wrapperRef}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(TextArea));\n"]}