{"version":3,"sources":["checkbox.ts"],"names":["mode","transparentize","baseStyle","props","colorScheme","theme","justifyContent","flexDirection","borderWidth","borderRadius","borderColor","bg","_text","ml","color","_interactionBox","position","_hover","_focus","_focusVisible","_disabled","opacity","_pressed","_checked","_invalid","_icon","sizes","lg","size","fontSize","md","sm","defaultProps","defaultIsChecked"],"mappings":"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","sourcesContent":["import { mode, transparentize } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { colorScheme, theme } = props;\n\n  return {\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    borderWidth: 2,\n    borderRadius: 'sm',\n    borderColor: mode('muted.300', 'muted.600')(props),\n    bg: mode('muted.50', 'muted.700')(props), // matching background color\n\n    _text: {\n      ml: 2,\n      color: mode('darkText', 'lightText')(props),\n    },\n    _interactionBox: {\n      position: 'absolute',\n      borderRadius: 'full',\n    },\n    _hover: {\n      _interactionBox: {\n        bg: transparentize('muted.200', 0.3)(theme),\n      },\n    },\n    _focus: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _focusVisible: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _disabled: {\n      _interactionBox: {\n        bg: 'transparent',\n      },\n      opacity: 0.4,\n    },\n    _pressed: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _checked: {\n      borderColor: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n      bg: mode(`${colorScheme}.600`, `${colorScheme}.300`)(props),\n    },\n    _invalid: {\n      borderColor: mode('error.600', 'error.400')(props),\n    },\n    _icon: {\n      color: mode(`muted.50`, `muted.800`)(props), // matching background color\n    },\n  };\n};\n\nconst sizes = {\n  lg: { _icon: { size: 6 }, _text: { fontSize: 'xl' } },\n  md: { _icon: { size: 5 }, _text: { fontSize: 'lg' } },\n  sm: { _icon: { size: 4 }, _text: { fontSize: 'md' } },\n};\n\nconst defaultProps = {\n  defaultIsChecked: false,\n  size: 'sm',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]}