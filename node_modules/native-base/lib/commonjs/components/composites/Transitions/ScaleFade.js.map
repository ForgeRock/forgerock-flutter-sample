{"version":3,"sources":["ScaleFade.tsx"],"names":["ScaleFade","children","style","props","ref","in","animationState","duration","initialScale","opacity","scale","transition","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,SAAS,GAAG,CAChB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmB,KAAGC;AAAtB,CADgB,EAEhBC,GAFgB,KAGb;AACH,QAAM;AAAEC,IAAAA,EAAE,EAAEC,cAAN;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAAiD,kCACrD,WADqD,EAErDL,KAFqD,CAAvD,CADG,CAKH;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,2BAAD;AACE,IAAA,OAAO,EAAE;AAAEM,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAEF;AAArB,KADX;AAEE,IAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE,CAArB;AAAwBC,MAAAA,UAAU,EAAE;AAAEJ,QAAAA;AAAF;AAApC,KAFX;AAGE,IAAA,IAAI,EAAE;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAEF,YAArB;AAAmCG,MAAAA,UAAU,EAAE;AAAEJ,QAAAA;AAAF;AAA/C,KAHR;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,OAAO,EAAEI,cALX;AAME,IAAA,GAAG,EAAEF;AANP,KAQGH,QARH,CADF;AAYD,CAzBD;;4BA2BeW,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBd,SAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport type { IScaleFadeProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ScaleFade = (\n  { children, style, ...props }: IScaleFadeProps,\n  ref?: any\n) => {\n  const { in: animationState, duration, initialScale } = useThemeProps(\n    'ScaleFade',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <PresenceTransition\n      initial={{ opacity: 0, scale: initialScale }}\n      animate={{ opacity: 1, scale: 1, transition: { duration } }}\n      exit={{ opacity: 0, scale: initialScale, transition: { duration } }}\n      style={style}\n      visible={animationState}\n      ref={ref}\n    >\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));\n"]}