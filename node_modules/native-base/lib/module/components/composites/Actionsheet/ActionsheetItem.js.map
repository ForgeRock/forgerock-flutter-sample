{"version":3,"sources":["ActionsheetItem.tsx"],"names":["React","memo","forwardRef","Button","usePropsResolution","useHasResponsiveProps","ActionsheetItem","props","ref","resolvedProps","undefined","cascadePseudoProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAA+BC,GAA/B,KAA6C;AACnE,QAAMC,aAAa,GAAGL,kBAAkB,CACtC,iBADsC,EAEtCG,KAFsC,EAGtCG,SAHsC,EAItC;AACEC,IAAAA,kBAAkB,EAAE;AADtB,GAJsC,CAAxC,CADmE,CASnE;;AACA,MAAIN,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBAAO,oBAAC,MAAD,eAAYE,aAAZ;AAA2B,IAAA,GAAG,EAAED;AAAhC,KAAP;AACD,CAfD;;AAiBA,4BAAeP,IAAI,eAACC,UAAU,CAACI,eAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IActionsheetItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetItem = (props: IActionsheetItemProps, ref?: any) => {\n  const resolvedProps = usePropsResolution(\n    'ActionsheetItem',\n    props,\n    undefined,\n    {\n      cascadePseudoProps: true,\n    }\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <Button {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetItem));\n"]}