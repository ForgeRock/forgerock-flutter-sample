{"version":3,"sources":["index.tsx"],"names":["Backdrop","props","cursor","bg","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,QAAQ,GAAIC,KAAD,IAA4B;AAC3C;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,oBAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ,KADR;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,GAAG,EAAE,CALP;AAME,IAAA,MAAM,EAAE,CANV;AAOE,IAAA,IAAI,EAAE,CAPR;AAQE,IAAA,KAAK,EAAE,CART;AASE,IAAA,UAAU,EAAE,KATd;AAUE,IAAA,yBAAyB,EAAC,IAV5B;AAWE,IAAA,EAAE,EAAED,KAAK,CAACE,EAAN,IAAY,cAXlB;AAYE,IAAA,OAAO,EAAE;AAZX,KAaMF,KAbN,EADF;AAiBD,CAtBD;;4BAwBeG,eAAMC,IAAN,CAAWL,QAAX,C","sourcesContent":["import React from 'react';\nimport { Pressable, IPressableProps } from '../../primitives/Pressable';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Backdrop = (props: IPressableProps) => {\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      _web={{\n        cursor: 'default',\n      }}\n      position=\"absolute\"\n      top={0}\n      bottom={0}\n      left={0}\n      right={0}\n      accessible={false}\n      importantForAccessibility=\"no\"\n      bg={props.bg || 'rgb(0, 0, 0)'}\n      opacity={0.3}\n      {...props}\n    ></Pressable>\n  );\n};\n\nexport default React.memo(Backdrop);\n"]}