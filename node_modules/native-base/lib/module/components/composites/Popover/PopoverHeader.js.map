{"version":3,"sources":["PopoverHeader.tsx"],"names":["React","memo","forwardRef","Platform","usePropsResolution","default","Box","PopoverContext","useHasResponsiveProps","PopoverHeader","props","ref","resolvedProps","setHeaderMounted","headerId","useContext","useEffect","OS","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACrD,QAAMC,aAAa,GAAGR,kBAAkB,CAAC,eAAD,EAAkBM,KAAlB,CAAxC;AACA,QAAM;AAAEG,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAiCd,KAAK,CAACe,UAAN,CAAiBR,cAAjB,CAAvC;AAEAP,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,WAAO,MAAM;AACXA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KAFD;AAGD,GALD,EAKG,CAACA,gBAAD,CALH,EAJqD,CAUrD;;AACA,MAAIL,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,GAAD,CACE;AADF;AAEE,IAAA,iBAAiB,EAAEP,QAAQ,CAACc,EAAT,KAAgB,KAAhB,GAAwB,QAAxB,GAAmCC,SAFxD;AAGE,IAAA,QAAQ,EAAEJ;AAHZ,KAIMF,aAJN;AAKE,IAAA,GAAG,EAAED;AALP,KADF;AASD,CAvBD;;AAyBA,4BAAeV,IAAI,eAACC,UAAU,CAACO,aAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = React.useContext(PopoverContext);\n\n  React.useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      //@ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'banner' : undefined}\n      nativeID={headerId}\n      {...resolvedProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]}