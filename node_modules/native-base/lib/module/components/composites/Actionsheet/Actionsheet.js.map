{"version":3,"sources":["Actionsheet.tsx"],"names":["React","memo","forwardRef","Modal","usePropsResolution","ActionSheetContext","useHasResponsiveProps","Actionsheet","children","hideDragIndicator","props","ref","isOpen","disableOverlay","onClose","resolvedProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,iBAAiB,GAAG,KAAhC;AAAuC,KAAGC;AAA1C,CADkB,EAElBC,GAFkB,KAGf;AACH,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,OAHI;AAIJ,OAAGC;AAJC,MAKFX,kBAAkB,CAAC,aAAD,EAAgBM,KAAhB,CALtB,CADG,CAQH;;AACA,MAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEE,MADV;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,cAAc,EAAC,UAHjB,CAIE;AAJF;AAKE,IAAA,eAAe,EAAC;AALlB,KAMMC,aANN;AAOE,IAAA,cAAc,EAAEF,cAAc,GAAG,KAAH,GAAW,IAP3C;AAQE,IAAA,mBAAmB,EAAEA,cAAc,GAAG,KAAH,GAAW,IARhD;AASE,IAAA,GAAG,EAAEF;AATP,mBAWE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF;AAApC,KACGD,QADH,CAXF,CADF;AAiBD,CAhCD;;AAkCA,4BAAeP,IAAI,eAACC,UAAU,CAACK,WAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { ActionSheetContext } from './ActionSheetContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Actionsheet = (\n  { children, hideDragIndicator = false, ...props }: IActionsheetProps,\n  ref: any\n) => {\n  const {\n    isOpen,\n    disableOverlay,\n    onClose,\n    ...resolvedProps\n  } = usePropsResolution('Actionsheet', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      justifyContent=\"flex-end\"\n      //@ts-ignore - internal use only\n      animationPreset=\"slide\"\n      {...resolvedProps}\n      overlayVisible={disableOverlay ? false : true}\n      closeOnOverlayClick={disableOverlay ? false : true}\n      ref={ref}\n    >\n      <ActionSheetContext.Provider value={{ hideDragIndicator }}>\n        {children}\n      </ActionSheetContext.Provider>\n    </Modal>\n  );\n};\n\nexport default memo(forwardRef(Actionsheet));\n"]}