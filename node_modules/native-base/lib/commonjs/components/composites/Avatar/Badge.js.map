{"version":3,"sources":["Badge.tsx"],"names":["AvatarBadge","props","ref","boxSize","newProps","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,WAAW,gBAAG,+BAClB,uBAAW,CAACC,KAAD,EAA2BC,GAA3B,KAAyC;AAClD,QAAM;AAAEC,IAAAA,OAAF;AAAW,OAAGC;AAAd,MAA2B,uCAAmB,aAAnB,EAAkCH,KAAlC,CAAjC,CADkD,CAElD;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,YAAD;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,MAAM,EAAE;AAHV,KAIMG,QAJN;AAKE,IAAA,KAAK,EAAED,OAAO,IAAI,CALpB;AAME,IAAA,MAAM,EAAEA,OAAO,IAAI,CANrB;AAOE,IAAA,GAAG,EAAED;AAPP,KADF;AAWD,CAjBD,CADkB,CAApB;AAqBAF,WAAW,CAACK,WAAZ,GAA0B,aAA1B;eACeL,W","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarBadgeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AvatarBadge = memo(\n  forwardRef((props: IAvatarBadgeProps, ref?: any) => {\n    const { boxSize, ...newProps } = usePropsResolution('AvatarBadge', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box\n        position=\"absolute\"\n        right={0}\n        bottom={0}\n        {...newProps}\n        width={boxSize || 3}\n        height={boxSize || 3}\n        ref={ref}\n      />\n    );\n  })\n);\n\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge as (props: IAvatarBadgeProps, ref?: any) => any;\n"]}