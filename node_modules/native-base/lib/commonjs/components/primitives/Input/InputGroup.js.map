{"version":3,"sources":["InputGroup.tsx"],"names":["supplyPropsToChildren","children","props","React","Children","map","child","cloneElement","InputGroup","ref","layoutProps","nonLayoutProps","stylingProps","margin","border","layout","flexbox","position","background"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,qBAAqB,GAAG,CAACC,QAAD,EAAgBC,KAAhB,KAA+B;AAC3D,SAAOC,eAAMC,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA8BK,KAAD,IAAwB;AAC1D,wBAAOH,eAAMI,YAAN,CAAmBD,KAAnB,EAA0BJ,KAA1B,EAAiCI,KAAK,CAACJ,KAAN,CAAYD,QAA7C,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMO,MAAMO,UAAU,gBAAG,+BACxB,uBAAW,CAAC;AAAEP,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAA2CO,GAA3C,KAAwD;AACjE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,6BAAgBT,KAAhB,EAAuB,CAC3D,GAAGU,qBAAaC,MAD2C,EAE3D,GAAGD,qBAAaE,MAF2C,EAG3D,GAAGF,qBAAaG,MAH2C,EAI3D,GAAGH,qBAAaI,OAJ2C,EAK3D,GAAGJ,qBAAaK,QAL2C,EAM3D,GAAGL,qBAAaM,UAN2C,EAO3D,OAP2D,EAQ3D,QAR2D,EAS3D,SAT2D,CAAvB,CAAtC,CADiE,CAYjE;;AACA,MAAI,kDAAsBhB,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,aAAD,eAAYQ,WAAZ;AAAyB,IAAA,GAAG,EAAED;AAA9B,MACGT,qBAAqB,CAAC,gCAAoBC,QAApB,CAAD,EAAgCU,cAAhC,CADxB,CADF;AAKD,CArBD,CADwB,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputGroupProps } from './types';\nimport { getAttachedChildren } from '../../../utils';\nimport { HStack } from '../Stack';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst supplyPropsToChildren = (children: any, props: any) => {\n  return React.Children.map(children, (child: JSX.Element) => {\n    return React.cloneElement(child, props, child.props.children);\n  });\n};\n\nexport const InputGroup = memo(\n  forwardRef(({ children, ...props }: IInputGroupProps, ref: any) => {\n    const [layoutProps, nonLayoutProps] = extractInObject(props, [\n      ...stylingProps.margin,\n      ...stylingProps.border,\n      ...stylingProps.layout,\n      ...stylingProps.flexbox,\n      ...stylingProps.position,\n      ...stylingProps.background,\n      'space',\n      'shadow',\n      'opacity',\n    ]);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <HStack {...layoutProps} ref={ref}>\n        {supplyPropsToChildren(getAttachedChildren(children), nonLayoutProps)}\n      </HStack>\n    );\n  })\n);\n"]}