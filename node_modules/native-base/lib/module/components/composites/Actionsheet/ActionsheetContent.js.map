{"version":3,"sources":["ActionsheetContent.tsx"],"names":["React","memo","forwardRef","Modal","usePropsResolution","Animated","PanResponder","ModalContext","Box","ActionSheetContext","useHasResponsiveProps","Content","hideDragIndicator","children","handleClose","pan","sheetHeight","props","ref","_dragIndicator","resolvedProps","panResponder","useRef","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","_evt","gestureState","dy","onPanResponderMove","e","event","y","useNativeDriver","onPanResponderRelease","_e","current","timing","toValue","x","duration","start","setTimeout","spring","overshootClamping","panHandlers","ActionsheetContent","useContext","ValueXY","handleCloseCallback","useCallback","transform","translateY","width","height","nativeEvent","layout"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetContentProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { Animated, PanResponder } from 'react-native';\nimport { ModalContext } from '../Modal/Context';\nimport Box from '../../primitives/Box';\nimport { ActionSheetContext } from './ActionSheetContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Content = memo(\n  forwardRef(\n    (\n      {\n        hideDragIndicator,\n        children,\n        handleClose,\n        pan,\n        sheetHeight,\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const { _dragIndicator, ...resolvedProps } = usePropsResolution(\n        'ActionsheetContent',\n        props\n      );\n\n      const panResponder = React.useRef(\n        PanResponder.create({\n          onStartShouldSetPanResponder: () => true,\n          onMoveShouldSetPanResponder: (_evt, gestureState) => {\n            return gestureState.dy > 15;\n          },\n          onPanResponderMove: (e, gestureState) => {\n            if (gestureState.dy > 0) {\n              Animated.event([null, { dy: pan.y }], {\n                useNativeDriver: false,\n              })(e, gestureState);\n            }\n          },\n          onPanResponderRelease: (_e, gestureState) => {\n            // If sheet is dragged 1/4th of it's height, close it\n            if (sheetHeight.current / 4 - gestureState.dy < 0) {\n              Animated.timing(pan, {\n                toValue: { x: 0, y: sheetHeight.current },\n                duration: 150,\n                useNativeDriver: true,\n              }).start(handleClose);\n\n              setTimeout(() => {\n                Animated.spring(pan, {\n                  toValue: { x: 0, y: 0 },\n                  overshootClamping: true,\n                  useNativeDriver: true,\n                }).start();\n              });\n            } else {\n              Animated.spring(pan, {\n                toValue: { x: 0, y: 0 },\n                overshootClamping: true,\n                useNativeDriver: true,\n              }).start();\n            }\n          },\n        })\n      ).current;\n\n      return (\n        <>\n          {!hideDragIndicator ? (\n            <>\n              {/* To increase the draggable area */}\n              <Box py={5} {...panResponder.panHandlers} collapsable={false} />\n            </>\n          ) : null}\n\n          <Modal.Content {...resolvedProps} ref={ref} safeAreaBottom>\n            {!hideDragIndicator ? (\n              <>\n                {/* Hack. Fix later. Add -2 negative margin to remove the padding added by ActionSheetContent */}\n                <Box\n                  pt={3}\n                  pb={3}\n                  mt={-2}\n                  {...panResponder.panHandlers}\n                  width=\"100%\"\n                  alignItems=\"center\"\n                  collapsable={false}\n                >\n                  <Box {..._dragIndicator} />\n                </Box>\n              </>\n            ) : null}\n\n            {children}\n          </Modal.Content>\n        </>\n      );\n    }\n  )\n);\nconst ActionsheetContent = (\n  { children, ...props }: IActionsheetContentProps,\n  ref?: any\n) => {\n  // return null;\n  const { handleClose } = React.useContext(ModalContext);\n  const { hideDragIndicator } = React.useContext(ActionSheetContext);\n  const pan = React.useRef(new Animated.ValueXY()).current;\n  const sheetHeight = React.useRef(0);\n\n  const handleCloseCallback = React.useCallback(handleClose, [\n    ModalContext,\n    handleClose,\n  ]);\n\n  // useEffect(() => {\n\n  // }, [])\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={{\n        transform: [{ translateY: pan.y }],\n        width: '100%',\n      }}\n      onLayout={(event) => {\n        const { height } = event.nativeEvent.layout;\n        sheetHeight.current = height;\n      }}\n      pointerEvents=\"box-none\"\n    >\n      <Content\n        children={children}\n        sheetHeight={sheetHeight}\n        pan={pan}\n        hideDragIndicator={hideDragIndicator}\n        handleClose={handleCloseCallback}\n        ref={ref}\n        {...props}\n      />\n    </Animated.View>\n  );\n};\n\nexport default memo(forwardRef(ActionsheetContent));\n"]}