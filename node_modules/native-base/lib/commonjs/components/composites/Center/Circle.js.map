{"version":3,"sources":["Circle.tsx"],"names":["Circle","style","size","props","ref","height","undefined","width","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;AAEA,MAAMA,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,EAA0CC,GAA1C,KAAuD;AACpE;AACA,MAAI,kDAAsBD,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,eAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,IAAI,EAAED;AAFR,KAGMC,KAHN;AAIE,IAAA,GAAG,EAAEC,GAJP;AAKE,IAAA,MAAM,EAAED,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAArB,GAA8BC,SALxC;AAME,IAAA,KAAK,EAAEH,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACI,KAApB,GAA4BD,SANrC;AAOE,IAAA,KAAK,EAAEL;AAPT,KADF;AAWD,CAhBD;;4BAkBeO,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBV,MAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport Center from './Center';\nimport type { ICircleProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Circle = ({ style, size, ...props }: ICircleProps, ref: any) => {\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Center\n      rounded=\"full\"\n      size={size}\n      {...props}\n      ref={ref}\n      height={props.height ? props.height : undefined}\n      width={props.width ? props.width : undefined}\n      style={style}\n    />\n  );\n};\n\nexport default React.memo(React.forwardRef(Circle));\n"]}