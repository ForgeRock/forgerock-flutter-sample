{"version":3,"sources":["usePropsResolution.test.tsx"],"names":["React","render","theme","defaultTheme","NativeBaseProvider","Box","Button","Pressable","Image","Spinner","Text","Input","Checkbox","Slider","HStack","Heading","FormControl","Menu","Platform","extendTheme","fireEvent","inset","frame","x","y","width","height","insets","top","left","right","bottom","Provider","children","CheckBoxGroup","groupValue","setGroupValue","useState","values","describe","it","getByTestId","box","expect","props","style","paddingLeft","toBe","space","paddingRight","paddingTop","paddingBottom","base","sm","lg","box2","OS","p","newTheme","components","baseStyle","py","bg","toEqual","backgroundColor","colors","cyan","variants","myBox","mt","marginTop","sizes","xs","uri","image","spinner","maxWidth","undefined","defaultProps","size","opacity","marginRight","marginBottom","marginLeft","shadows","borderLeftWidth","px","pl","borderColor","formControl","gray","triggerProps","triggerElement","press","menuItem","disabledMenuItem","blue","pink","color","testID","buttonElement","buttonText","config","initialColorMode","_dark","source","imageElement","inputElement","placeholderTextColor","blueGray","fontSize","fontSizes","borderBottomWidth","variant","disabled","required","getAllByRole","checkbox","length","accessibilityState","checked","sliderElement","minValue","maxValue","step","thumbSize","sliderSize","colorScheme","text","lineHeight","letterSpacing","hstackElement","flexDirection","pressableElement","red","direction","responsiveLineHeight","heading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { theme as defaultTheme } from '../../theme';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport {\n  Box,\n  Button,\n  Pressable,\n  // Select,\n  Image,\n  Spinner,\n  Text,\n  Input,\n  Checkbox,\n  Slider,\n  // Icon,\n  HStack,\n  Heading,\n} from '../../components/primitives';\n// import { Ionicons } from '@expo/vector-icons';\nimport { FormControl, Menu } from '../../components/composites';\nimport { Platform } from 'react-native';\nimport { extendTheme } from '../../core/extendTheme';\nimport { fireEvent } from '@testing-library/react-native';\n// import { InfoIcon } from '../../components/primitives/Icon/Icons';\n\nconst inset = {\n  frame: { x: 0, y: 0, width: 0, height: 0 },\n  insets: { top: 0, left: 0, right: 0, bottom: 0 },\n};\n\nconst Provider = ({ children, theme = defaultTheme }: any) => {\n  return (\n    <NativeBaseProvider initialWindowMetrics={inset} theme={theme}>\n      {children}\n    </NativeBaseProvider>\n  );\n};\n\nfunction CheckBoxGroup() {\n  const [groupValue, setGroupValue] = React.useState(['Item 1 ', 'Item 3 ']);\n  return (\n    <Checkbox.Group\n      colorScheme=\"green\"\n      defaultValue={groupValue}\n      onChange={(values) => {\n        setGroupValue(values || []);\n      }}\n    >\n      <Checkbox value=\"Item 1 \">\n        <Text mx={2}>Item 1</Text>\n      </Checkbox>\n      <Checkbox value=\"Item 2 \">\n        <Text mx={2}>Item 2</Text>\n      </Checkbox>\n      <Checkbox value=\"Item 3 \">\n        <Text mx={2}>Item 3</Text>\n      </Checkbox>\n      <Checkbox colorScheme=\"orange\" value=\"Indeterminate Item \">\n        <Text mx={2}>Indeterminate Item</Text>\n      </Checkbox>\n    </Checkbox.Group>\n  );\n}\n\ndescribe('props resolution', () => {\n  it('tests simple resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={2} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['2']);\n  });\n\n  it('tests simple resolution with responsive props', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={[2, 4, 5]} testID=\"test\">\n          hello world\n        </Box>\n        <Box p={{ base: 1, sm: 5, lg: 10 }} testID=\"test2\">\n          hello world\n        </Box>\n      </Provider>\n    );\n\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['4']);\n    const box2 = getByTestId('test2');\n    expect(box2.props.style.paddingLeft).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingRight).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingTop).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingBottom).toBe(defaultTheme.space['5']);\n  });\n\n  it('resolves platform props', () => {\n    Platform.OS = 'android';\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={5} _android={{ p: 10 }} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['10']);\n  });\n\n  it('resolves base style with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box p={5} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('resolves base style and variants with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('resolves base style, variants and sizes with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n          sizes: {\n            xs: {\n              height: 10,\n            },\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n          size=\"xs\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      height: newTheme.sizes['10'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('tests component sizes resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Image\n          source={{ uri: 'https://nativebase.io/img/nativebase-logo.svg' }}\n          alt=\"test-image\"\n          size=\"md\"\n          testID=\"image\"\n        />\n        <Spinner size=\"sm\" testID=\"spinner\" />\n      </Provider>\n    );\n    const image = getByTestId('image');\n    const spinner = getByTestId('spinner');\n    expect(image.props.style).toEqual({\n      height: defaultTheme.space['20'],\n      maxWidth: '100%',\n      width: defaultTheme.space['20'],\n    });\n\n    expect(spinner.props.style).toEqual(undefined);\n  });\n\n  it('resolves base style and variants, sizes and default props with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n          sizes: {\n            xs: {\n              height: 10,\n            },\n          },\n          defaultProps: {\n            size: 'xs',\n          },\n        },\n      },\n    });\n\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      height: newTheme.sizes['10'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('tests alpha opacity resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={2} bg=\"primary.400:alpha.50\" testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.backgroundColor).toBe(\n      'rgba(34, 211, 238, ' + defaultTheme.opacity['50'] + ')'\n    );\n  });\n\n  it('resolves negative margins', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box m={-5} mt={'-10'} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: -defaultTheme.space['10'],\n      marginRight: -defaultTheme.space['5'],\n      marginBottom: -defaultTheme.space['5'],\n      marginLeft: -defaultTheme.space['5'],\n    });\n  });\n\n  it('resolves shadow from theme', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box shadow={9} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual(defaultTheme.shadows[9]);\n  });\n\n  it('FormControl: pseudo props test ', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <FormControl isDisabled>\n          <FormControl.HelperText\n            testID=\"test\"\n            _disabled={{\n              borderLeftWidth: 1,\n              mt: 1,\n              px: 1,\n              pl: 2,\n              borderColor: 'gray.400',\n            }}\n          />\n        </FormControl>\n      </Provider>\n    );\n    const formControl = getByTestId('test');\n    expect(formControl.props.style).toEqual({\n      borderLeftWidth: 1,\n      marginTop: defaultTheme.space['1'],\n      paddingLeft: defaultTheme.space['2'],\n      paddingRight: defaultTheme.space['1'],\n      borderColor: defaultTheme.colors.gray['400'],\n    });\n  });\n\n  it('Menu: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Menu\n          trigger={(triggerProps) => {\n            return (\n              <Pressable\n                testID=\"pressableTest\"\n                accessibilityLabel=\"More options menu\"\n                {...triggerProps}\n              >\n                Open menu\n              </Pressable>\n            );\n          }}\n        >\n          <Menu.Item>Arial</Menu.Item>\n          <Menu.Item bg=\"blue.300\" testID=\"test\">\n            Nunito Sans\n          </Menu.Item>\n          <Menu.Item testID=\"test1\" isDisabled _disabled={{ bg: 'pink.300' }}>\n            Tahoma\n          </Menu.Item>\n        </Menu>\n      </Provider>\n    );\n    const triggerElement = getByTestId('pressableTest');\n    fireEvent.press(triggerElement);\n    const menuItem = getByTestId('test');\n    const disabledMenuItem = getByTestId('test1');\n    expect(menuItem.props.style.backgroundColor).toBe(\n      defaultTheme.colors.blue['300']\n    );\n    expect(disabledMenuItem.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['300']\n    );\n  });\n\n  it('Button: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Button\n          testID=\"test\"\n          bg=\"pink.900\"\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['900']\n    );\n  });\n  it('Button: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button\n          testID=\"test\"\n          _ios={{ _dark: { bg: 'pink.900' } }}\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['900']\n    );\n  });\n  it('Button: style responsive props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button\n          testID=\"test\"\n          _ios={{ _dark: { bg: ['pink.900', 'blue.900', 'cyan.900'] } }}\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.blue['900']\n    );\n  });\n  it('Image: style responsive props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Image\n          testID=\"test\"\n          source={{\n            uri: 'https://wallpaperaccess.com/full/317501jpg',\n          }}\n          alt=\"Alternate Text\"\n          _ios={{\n            _dark: {\n              source: {\n                uri: 'https://www.w3schools.com/css/img_lightsjpg',\n              },\n              size: ['sm', 'md', 'xl'],\n            },\n          }}\n        />\n      </Provider>\n    );\n    const imageElement = getByTestId('test');\n    expect(imageElement.props.style).toEqual({\n      height: defaultTheme.space['20'],\n      maxWidth: '100%',\n      width: defaultTheme.space['20'],\n    });\n  });\n\n  it('Input: Basic check', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input\n          testID=\"test\"\n          w=\"100%\"\n          mx={3}\n          placeholder=\"Default Input\"\n          placeholderTextColor=\"blueGray.400\"\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.width).toBe('100%');\n\n    expect(inputElement.props.placeholderTextColor).toBe(\n      defaultTheme.colors.blueGray['400']\n    );\n    expect(inputElement.props.style.marginLeft).toBe(defaultTheme.space['3']);\n    expect(inputElement.props.style.marginRight).toBe(defaultTheme.space['3']);\n  });\n\n  it('Input: color mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          testID=\"test\"\n          _light={{\n            placeholderTextColor: 'blueGray.400',\n          }}\n          _dark={{\n            placeholderTextColor: 'blueGray.50',\n          }}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.placeholderTextColor).toBe(\n      defaultTheme.colors.blueGray['50']\n    );\n  });\n\n  it('Input: size', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          testID=\"test\"\n          size=\"sm\"\n          variant=\"outline\"\n          _dark={{\n            size: 'md',\n          }}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.fontSize).toBe(defaultTheme.fontSizes.sm);\n  });\n\n  it('Input: variant', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input testID=\"test\" variant=\"underlined\" />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.borderBottomWidth).toBe(1);\n  });\n\n  // it('Input: inputElements', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Input\n  //         testID=\"test1\"\n  //         InputLeftElement={<Button testID=\"test2\">leftIcon</Button>}\n  //         placeholder=\"Input\"\n  //       />\n  //     </Provider>\n  //   );\n  //   const inputElement = getByTestId('test1');\n  //   const iconElement = getByTestId('test2');\n  //   console.log(inputElement, '!!!!!');\n  //   console.log('===========');\n  //   console.log(inputElement.props, '!!!!!');\n  //   expect(inputElement.props.InputLeftElement).toBe(iconElement);\n  // });\n  it('Input: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          testID=\"test\"\n          _ios={{ _dark: { variant: 'underlined', size: 'sm' } }}\n          variant=\"outline\"\n          size=\"lg\"\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.borderBottomWidth).toBe(1);\n    // as input of 'sm' size is mapped to 'xs' fontsize\n    expect(inputElement.props.style.fontSize).toBe(defaultTheme.fontSizes.xs);\n  });\n\n  // it('Input: inputElemets', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Input\n  //         testID=\"test1\"\n  //         InputLeftElement={<Button testID=\"test2\">leftIcon</Button>}\n  //         placeholder=\"Input\"\n  //       />\n  //     </Provider>\n  //   );\n  //   const inputElement = getByTestId('test1');\n  //   const iconElement = getByTestId('test2');\n  //   console.log(inputElement, '!!!!!');\n  //   console.log('===========');\n  //   console.log(inputElement.props, '!!!!!');\n  //   expect(inputElement.props.InputLeftElement).toBe(iconElement);\n  // });\n\n  it('Input: disabled', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input\n          testID=\"test\"\n          type=\"password\"\n          isDisabled={true}\n          isRequired={true}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.disabled).toBe(true);\n    expect(inputElement.props.required).toBe(true);\n  });\n\n  // ==========================================\n\n  it('handles defaults and onChange on checkBoxGroup', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <CheckBoxGroup />\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(4);\n    expect(checkbox[0].props.accessibilityState.checked).toBe(true);\n    expect(checkbox[1].props.accessibilityState.checked).toBe(false);\n    expect(checkbox[2].props.accessibilityState.checked).toBe(true);\n    expect(checkbox[3].props.accessibilityState.checked).toBe(false);\n    fireEvent.press(checkbox[1]);\n    expect(checkbox[1].props.accessibilityState.checked).toBe(true);\n  });\n\n  it('checkBox: disabled, checked', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Checkbox value=\"Item 1 \">\n          <Text mx={2}>Item 1</Text>\n        </Checkbox>\n        <Checkbox value=\"Item 2 \" isDisabled>\n          <Text mx={2}>Item 2</Text>\n        </Checkbox>\n        <Checkbox value=\"Item 3\" isChecked>\n          <Text mx={2}>Item 3</Text>\n        </Checkbox>\n        <Checkbox colorScheme=\"orange\" value=\"Indeterminate Item\" isInvalid>\n          <Text mx={2}>Indeterminate Item</Text>\n        </Checkbox>\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(4);\n    expect(checkbox[1].props.accessibilityState.disabled).toBe(true);\n    expect(checkbox[2].props.accessibilityState.checked).toBe(true);\n    // expect(checkbox[3].props.accessibilityState.invalid).toBe(true);\n  });\n\n  // it('Checkbox: style props test with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   const { getAllByRole } = render(\n  //     <Provider theme={newTheme}>\n  //       <Checkbox\n  //         value=\"Item 1\"\n  //         isChecked={true}\n  //         isDisabled={false}\n  //         _dark={{\n  //           isChecked: false,\n  //           isDisabled: true,\n  //         }}\n  //       >\n  //         <Text mx={2}>Item 1</Text>\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n\n  //   let checkbox = getAllByRole('checkbox');\n  //   console.log(checkbox[0].props.accessibilityState, '@@@@');\n  //   expect(checkbox[0].props.accessibilityState.checked).toBe(false);\n  //   expect(checkbox[0].props.accessibilityState.disabled).toBe(true);\n  // });\n\n  // it('Checkbox: style props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   Platform.OS = 'ios';\n  //   const { getAllByRole } = render(\n  //     <Provider theme={newTheme}>\n  //       <Checkbox\n  //         value=\"Item 1\"\n  //         isChecked={true}\n  //         isDisabled={false}\n  //         _ios={{\n  //           _dark: {\n  //             isChecked: false,\n  //             isDisabled: true,\n  //           },\n  //         }}\n  //       >\n  //         <Text mx={2}>Item 1</Text>\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n\n  //   let checkbox = getAllByRole('checkbox');\n  //   console.log(checkbox[0].props.accessibilityState, '@@@@');\n  //   expect(checkbox[0].props.accessibilityState.checked).toBe(false);\n  //   expect(checkbox[0].props.accessibilityState.disabled).toBe(true);\n  // });\n\n  it('onChange on checkBox', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Checkbox value=\"item 1\" />\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(1);\n    fireEvent.press(checkbox[0]);\n    expect(checkbox[0].props.accessibilityState.checked).toBe(true);\n  });\n\n  // it('CustomIcon checkBox', () => {\n  //   let { getAllByRole, getByTestId } = render(\n  //     <Provider>\n  //       <Checkbox\n  //         value=\"orange\"\n  //         colorScheme=\"orange\"\n  //         size=\"md\"\n  //         icon={<Icon testID=\"icon\" as={<InfoIcon />} />}\n  //         defaultIsChecked\n  //       >\n  //         Info\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n  //   let checkbox = getAllByRole('checkbox');\n  //   let nestedIcon = getByTestId('icon');\n\n  //   expect(checkbox[0].props.icon).toBe(nestedIcon);\n  // });\n\n  //  ==========================================\n  it('Slider: basic', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Slider\n          testID=\"slider\"\n          // Need to test\n          // defaultValue={70}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n    const sliderElement = getByTestId('slider');\n    expect(sliderElement.props.minValue).toBe(0);\n    expect(sliderElement.props.maxValue).toBe(100);\n    expect(sliderElement.props.step).toBe(10);\n    expect(sliderElement.props.thumbSize).toBe(4);\n    expect(sliderElement.props.sliderSize).toBe(4);\n    expect(sliderElement.props.colorScheme).toBe('red');\n  });\n\n  //  ==========================================\n  // it('Modal: size', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Modal isOpen={true} size=\"sm\">\n  //         <Modal.Content testID=\"size\">\n  //           <Modal.Header>Modal Title</Modal.Header>\n  //           <Modal.Body>\n  //             Sit nulla est ex deserunt exercitation anim occaecat. Nostrud\n  //             ullamco deserunt aute id consequat veniam incididunt duis in sint\n  //             irure nisi. Mollit officia cillum Lorem ullamco minim nostrud elit\n  //             officia tempor esse quis. Sunt ad dolore quis aute consequat.\n  //             Magna exercitation reprehenderit magna aute tempor cupidatat\n  //             consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex\n  //             incididunt cillum quis. Velit duis sit officia eiusmod Lorem\n  //             aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi\n  //             consectetur esse laborum eiusmod pariatur\n  //           </Modal.Body>\n  //         </Modal.Content>\n  //       </Modal>\n  //     </Provider>\n  //   );\n  //   const modalElement = getByTestId('size');\n  //   // console.log(modalElement, 'jdj');\n  //   expect(modalElement.props.style.width).toBe('60%');\n  // });\n  it('Slider: style props test with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Slider\n          testID=\"test\"\n          _dark={{\n            minValue: 20,\n            maxValue: 120,\n            step: 25,\n            colorScheme: 'blue',\n            size: 'md',\n          }}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n\n    const sliderElement = getByTestId('test');\n    expect(sliderElement.props.minValue).toBe(20);\n    expect(sliderElement.props.maxValue).toBe(120);\n    expect(sliderElement.props.step).toBe(25);\n    expect(sliderElement.props.thumbSize).toBe(5);\n    expect(sliderElement.props.sliderSize).toBe(5);\n    expect(sliderElement.props.colorScheme).toBe('blue');\n  });\n  it('tests lineHeight & letterspacing in text ', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Text\n          /* @ts-ignore */\n          fontSize=\"20px\"\n          lineHeight=\"5xl\"\n          letterSpacing=\"xl\"\n          testID=\"test\"\n        >\n          This is a text\n        </Text>\n      </Provider>\n    );\n\n    const text = getByTestId('test');\n    expect(text.props.style.lineHeight).toBe(80);\n    expect(text.props.style.letterSpacing).toBe(1);\n  });\n\n  it('Slider: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Slider\n          testID=\"test\"\n          _ios={{\n            _dark: {\n              minValue: 10,\n              maxValue: 110,\n              step: 15,\n              colorScheme: 'green',\n              size: 'md',\n            },\n          }}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n\n    const sliderElement = getByTestId('test');\n    expect(sliderElement.props.minValue).toBe(10);\n    expect(sliderElement.props.maxValue).toBe(110);\n    expect(sliderElement.props.step).toBe(15);\n    expect(sliderElement.props.thumbSize).toBe(5);\n    expect(sliderElement.props.sliderSize).toBe(5);\n    expect(sliderElement.props.colorScheme).toBe('green');\n  });\n\n  it('HStack: basic', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <HStack testID=\"hstack\">\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n    const hstackElement = getByTestId('hstack');\n    expect(hstackElement.props.style.flexDirection).toBe('row');\n  });\n\n  it('HStack: direction', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <HStack testID=\"test\" direction=\"column\">\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n    const hstackElement = getByTestId('test');\n    expect(hstackElement.props.style.flexDirection).toBe('column');\n  });\n\n  // it('Icon: basic', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Icon as={<Ionicons name=\"md-checkmark-circle\" />} />\n  //     </Provider>\n  //   );\n  //   const iconElement = getByTestId('test123');\n  //   expect(iconElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.red['200']\n  //   );\n  // });\n\n  // it('Icon: Nativebase icons', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <MoonIcon testId=\"test\" />\n  //     </Provider>\n  //   );\n  //   const iconElement = getByTestId('test');\n  //   expect(pressableElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.red['200']\n  //   );\n  // });\n\n  it('Pressable: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Pressable testID=\"test\" bg=\"red.200\" _hover={{ bg: 'teal.300' }}>\n          <Text>hello world</Text>\n        </Pressable>\n      </Provider>\n    );\n    const pressableElement = getByTestId('test');\n    expect(pressableElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.red['200']\n    );\n  });\n\n  // it('Pressable: style props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n\n  //   Platform.OS = 'ios';\n  //   const { getByTestId } = render(\n  //     <Provider theme={newTheme}>\n  //       <Pressable testID=\"test\" _ios={{ _dark: { bg: 'pink.900' } }}>\n  //         PRIMARY\n  //       </Pressable>\n  //     </Provider>\n  //   );\n  //   const buttonElement = getByTestId('test');\n  //   expect(buttonElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.pink['900']\n  //   );\n  // });\n\n  // it('Pressable: style responsive props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   Platform.OS = 'ios';\n  //   const { getByTestId } = render(\n  //     <Provider theme={newTheme}>\n  //       <Pressable\n  //         testID=\"test\"\n  //         _ios={{ _dark: { bg: ['pink.900', 'blue.900', 'cyan.900'] } }}\n  //       >\n  //         PRIMARY\n  //       </Pressable>\n  //     </Provider>\n  //   );\n  //   const buttonElement = getByTestId('test');\n  //   expect(buttonElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.blue['900']\n  //   );\n  // });\n  // });\n  it('HStack: style props test with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <HStack\n          testID=\"test\"\n          direction=\"column\"\n          _dark={{\n            direction: 'row',\n          }}\n        >\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n\n    const hstackElement = getByTestId('test');\n    expect(hstackElement.props.style.flexDirection).toBe('row');\n  });\n\n  it('HStack: style props test on ios & dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box>\n          <Text\n            // @ts-ignore\n            fontSize=\"12px\"\n            testID=\"test\"\n            lineHeight=\"4xl\"\n            letterSpacing=\"xl\"\n            _ios={{\n              _dark: {\n                fontSize: '15px',\n                letterSpacing: 'lg',\n                lineHeight: '3xl',\n              },\n            }}\n          >\n            This is a text\n          </Text>\n          <Text\n            testID=\"responsiveLineHeight\"\n            lineHeight=\"3xl\"\n            fontSize={['12px', '13px']}\n          >\n            hello world\n          </Text>\n        </Box>\n      </Provider>\n    );\n    const text = getByTestId('test');\n    const responsiveLineHeight = getByTestId('responsiveLineHeight');\n    expect(text.props.style.lineHeight).toBe(37.5);\n    expect(text.props.style.letterSpacing).toBe(0.375);\n    expect(responsiveLineHeight.props.style.lineHeight).toBe(32.5);\n  });\n\n  it('Heading: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box>\n          <Heading\n            // @ts-ignore\n            fontSize=\"12px\"\n            testID=\"test\"\n            lineHeight=\"4xl\"\n            letterSpacing=\"xl\"\n            _ios={{\n              _dark: {\n                fontSize: '15px',\n                letterSpacing: 'lg',\n                lineHeight: '3xl',\n              },\n            }}\n          >\n            This is a Heading\n          </Heading>\n        </Box>\n      </Provider>\n    );\n    const heading = getByTestId('test');\n    expect(heading.props.style.lineHeight).toBe(37.5);\n    expect(heading.props.style.letterSpacing).toBe(0.375);\n  });\n});\n\n// =========================================================\n// it('Modal: size', () => {\n//   const { getByTestId } = render(\n//     <Provider>\n//       <Modal isOpen={true} size=\"sm\">\n//         <Modal.Content testID=\"size\">\n//           <Modal.Header>Modal Title</Modal.Header>\n//           <Modal.Body>\n//             Sit nulla est ex deserunt exercitation anim occaecat. Nostrud\n//             ullamco deserunt aute id consequat veniam incididunt duis in sint\n//             irure nisi. Mollit officia cillum Lorem ullamco minim nostrud elit\n//             officia tempor esse quis. Sunt ad dolore quis aute consequat.\n//             Magna exercitation reprehenderit magna aute tempor cupidatat\n//             consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex\n//             incididunt cillum quis. Velit duis sit officia eiusmod Lorem\n//             aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi\n//             consectetur esse laborum eiusmod pariatur\n//           </Modal.Body>\n//         </Modal.Content>\n//       </Modal>\n//     </Provider>\n//   );\n//   const modalElement = getByTestId('size');\n\n//   expect(modalElement.props.style.width).toBe('60%');\n// });\n"]}