{"version":3,"sources":["index.tsx"],"names":["IconButton","icon","children","props","ref","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","isFocusVisible","focusRingProps","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","clonedIcon","React","cloneElement"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAKA;;;;;;;;AAEA,MAAMA,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkB,KAAGC;AAArB,CADiB,EAEjBC,GAFiB,KAGd;AACH,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4B,2BAAlC;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAgC,+BAAtC;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4B,2BAAlC;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBF,IAAAA,UAAU,EAAEG;AAA9B,MAAsD,0BAA5D;AAEA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,MAPI;AAQJ,OAAGC;AARC,MASF,uCAAmB,YAAnB,EAAiCjB,KAAjC,EAAwC;AAC1CG,IAAAA,SAD0C;AAE1CE,IAAAA,SAF0C;AAG1CE,IAAAA,SAH0C;AAI1CC,IAAAA;AAJ0C,GAAxC,CATJ;AAgBA,MAAIU,UAAJ;;AACA,MAAIpB,IAAJ,EAAU;AACRoB,IAAAA,UAAU,gBAAGC,eAAMC,YAAN,CAAmBtB,IAAnB,EAAyB,EACpC,GAAGY;AADiC,KAAzB,CAAb;AAGD,GA3BE,CA6BH;;;AACA,MAAI,kDAAsBV,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,oBAAD;AACE,IAAA,iBAAiB,EAAC,QADpB;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,SAAS,EAAE,iCAAqBU,SAArB,EAAgCP,cAAc,CAACO,SAA/C,CAHb;AAIE,IAAA,UAAU,EAAE,iCAAqBC,UAArB,EAAiCR,cAAc,CAACQ,UAAhD,CAJd,CAKE;AALF;AAME,IAAA,SAAS,EAAE,iCAAqBC,SAArB,EAAgCX,UAAU,CAACW,SAA3C,CANb,CAOE;AAPF;AAQE,IAAA,UAAU,EAAE,iCAAqBC,UAArB,EAAiCZ,UAAU,CAACY,UAA5C,CARd,CASE;AATF;AAUE,IAAA,OAAO,EAAE,iCACP,iCAAqBC,OAArB,EAA8BT,UAAU,CAACS,OAAzC,CADO,EAEPN,cAAc,CAACM,OAFR,CAVX,CAcE;AAdF;AAeE,IAAA,MAAM,EAAE,iCACN,iCAAqBC,MAArB,EAA6BV,UAAU,CAACU,MAAxC,CADM,EAENP,cAAc,CAACO,MAFT;AAfV,KAmBMC,aAnBN,GAqBGC,UAAU,iBAAI,6BAAC,UAAD,EAAUR,KAAV,EAAkBX,QAAlB,CArBjB,CADF;AAyBD,CA9DD;;4BAgEe,+BAAK,uBAAWF,UAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport { Icon } from '../../primitives/Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IIconButtonProps } from './types';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nconst IconButton = (\n  { icon, children, ...props }: IIconButtonProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('IconButton', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n    isFocusVisible,\n  });\n\n  let clonedIcon;\n  if (icon) {\n    clonedIcon = React.cloneElement(icon, {\n      ..._icon,\n    });\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {clonedIcon || <Icon {..._icon}>{children}</Icon>}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(IconButton));\nexport type { IIconButtonProps };\n"]}